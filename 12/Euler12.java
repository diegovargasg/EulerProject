/***************************************************************************************
@author: Diego Vargas
@Desc: https://projecteuler.net/problem=12

The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 

The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?.

****************************************************************************************/
import java.util.Calendar;
import java.lang.*;

public class Euler12{

    public static void main(String[] args) {

        Calendar init = Calendar.getInstance();
        System.out.println("\n-- Euler12 --\n\nExecuting... \n\n");

        int j = 0;
        int y = 0;
        int k = 0;

        while( y <= 500 ){
            y = 0;
            j += (k+1);

            //Ignores odd numbers
            if( (j%2) == 0 ){

                // Calculates Divisors
                int x = j;
                int limit = x;
                int numberOfDivisors = 0;

                for (int i = 1; i < limit; ++i) {
                    if (x % i == 0) {
                        limit = x / i;
                        if (limit != i) {
                            y++;
                        }
                        y++;
                    }
                }
            }
            System.out.println(j+" - "+y);
            k++;
        }

        Calendar end = Calendar.getInstance();
        long diff = (end.getTimeInMillis() - init.getTimeInMillis())/(1000);
        System.out.println("\n\n Time Execution: "+diff+"Sec.");
    }
}